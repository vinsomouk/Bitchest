framework:
    rate_limiter:
        # define 2 rate limiters (one for username+IP, the other for IP)
        username_ip_login:
            policy: token_bucket
            limit: 5
            rate: { interval: '5 minutes' }

        ip_login:
            policy: sliding_window
            limit: 50
            interval: '15 minutes'

services:
    # our custom login rate limiter
    app.login_rate_limiter:
        class: Symfony\Component\Security\Http\RateLimiter\DefaultLoginRateLimiter
        arguments:
            $globalFactory: '@limiter.ip_login'
            $localFactory: '@limiter.username_ip_login'
            $secret: '%kernel.secret%'
security:
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern:
                - ^/_profiler/
                - ^/_wdt/
                - ^/css/
                - ^/images/
                - ^/js/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            json_login:
                # api_login is a route we will create below
                check_path: api_login
            http_basic:
                realm: Secured Area
            x509:
                # configuration x509 if needed
            remote_user:
                # configuration remote_user if needed
            login_throttling: null

            # configure the maximum login attempts
            login_throttling:
                limiter: 'app.login_rate_limiter'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    access_control:
        # ... other access control rules

    # ... other security configurations
